name: "publish"

on:
    push:
        tags:
            - "tchap-*"

# `tauri-action` can also upload app bundles to an existing GitHub release.
# This workflow uses different actions to create and publish the release.
# `tauri-action` will only build and upload the app bundles to the specified release.

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.prepare-release.outputs.id }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: get version
        id: version
        run: echo "PACKAGE_VERSION=$(node -p "require('./src-tauri/tauri.conf.json').version")" >> $GITHUB_OUTPUT

      - name: Prepare release
        id: prepare-release
        uses: ncipollo/release-action@v1
        with:
            tag: "tchap-${{ steps.version.outputs.PACKAGE_VERSION }}"
            generateReleaseNotes: true
            token: ${{ secrets.GITHUB_TOKEN }}
            allowUpdates: true


  build-tchap-desktop:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: "windows-latest"
          # this config will be merge with tauri.conf.json,
          # it is neceessary for windows to automatically add the dll in the final build
            args: "--config src-tauri\\tauri.windows.conf.json"
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin --config src-tauri/tauri.macos.conf.json"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin --config src-tauri/tauri.macos.conf.json"
          - platform: "ubuntu-22.04"
            args: ""
    uses: ./.github/workflows/build-tauri.yml
    with:
      platform: ${{ matrix.platform }}
      args : ${{ matrix.args }}
      releaseId: ${{ needs.create-release.outputs.release_id }}
      env: prod
    secrets:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}


  build-tchap-desktop-dev:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: "windows-latest"
          # this config will be merge with tauri.conf.json,
          # Needs to explicitly set tauri conf for dev build to overide name and identifier
            args: "--config src-tauri\\tauri.conf.dev.json"
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin --config src-tauri/tauri.conf.dev.json"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin --config src-tauri/tauri.conf.dev.json"
          - platform: "ubuntu-22.04"
          # Needs to explicitly set tauri conf for dev build to overide name and identifier
            args: "--config src-tauri/tauri.conf.dev.json"
    uses: ./.github/workflows/build-tauri.yml
    with:
      platform: ${{ matrix.platform }}
      args : ${{ matrix.args }}
      releaseId: ${{ needs.create-release.outputs.release_id }}
      env: dev
    secrets:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

build-tchap-desktop-preprod:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: "windows-latest"
          # this config will be merge with tauri.conf.json,
          # Needs to explicitly set tauri conf for dev build to overide name and identifier
            args: "--config src-tauri\\tauri.conf.dev.json"
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin --config src-tauri/tauri.conf.dev.json"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin --config src-tauri/tauri.conf.dev.json"
          - platform: "ubuntu-22.04"
          # Needs to explicitly set tauri conf for dev build to overide name and identifier
            args: "--config src-tauri/tauri.conf.dev.json"
    uses: ./.github/workflows/build-tauri.yml
    with:
      platform: ${{ matrix.platform }}
      args : ${{ matrix.args }}
      releaseId: ${{ needs.create-release.outputs.release_id }}
      env: preprod
    secrets:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

